<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.future.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.future.domain.User">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_num" property="userNum" jdbcType="VARCHAR" />
		<result column="user_password" property="userPassword"
			jdbcType="VARCHAR" />
		<result column="user_np" property="userNp" jdbcType="INTEGER" />
		<result column="user_report" property="userReport" jdbcType="VARCHAR" />
		<result column="user_duty" property="userDuty" jdbcType="VARCHAR" />
		<result column="user_desc" property="userDesc" jdbcType="VARCHAR" />
		<result column="user_dep" property="userDep" jdbcType="INTEGER" />
		<result column="user_role" property="userRole" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		user_id, user_name, user_num, user_password, user_np, user_report, user_duty,
		user_desc,
		user_dep, user_role
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from od_user
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from od_user
		where user_id = #{userId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.future.domain.User">
		insert into od_user (user_id, user_name, user_num,
		user_password, user_np, user_report,
		user_duty, user_desc, user_dep,
		user_role)
		values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
		#{userNum,jdbcType=VARCHAR},
		#{userPassword,jdbcType=VARCHAR}, #{userNp,jdbcType=INTEGER}, #{userReport,jdbcType=VARCHAR},
		#{userDuty,jdbcType=VARCHAR}, #{userDesc,jdbcType=VARCHAR},
		#{userDep,jdbcType=INTEGER},
		#{userRole,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.future.domain.User">
		insert into od_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="userNum != null">
				user_num,
			</if>
			<if test="userPassword != null">
				user_password,
			</if>
			<if test="userNp != null">
				user_np,
			</if>
			<if test="userReport != null">
				user_report,
			</if>
			<if test="userDuty != null">
				user_duty,
			</if>
			<if test="userDesc != null">
				user_desc,
			</if>
			<if test="userDep != null">
				user_dep,
			</if>
			<if test="userRole != null">
				user_role,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="userNum != null">
				#{userNum,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				#{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="userNp != null">
				#{userNp,jdbcType=INTEGER},
			</if>
			<if test="userReport != null">
				#{userReport,jdbcType=VARCHAR},
			</if>
			<if test="userDuty != null">
				#{userDuty,jdbcType=VARCHAR},
			</if>
			<if test="userDesc != null">
				#{userDesc,jdbcType=VARCHAR},
			</if>
			<if test="userDep != null">
				#{userDep,jdbcType=INTEGER},
			</if>
			<if test="userRole != null">
				#{userRole,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.future.domain.User">
		update od_user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userNum != null">
				user_num = #{userNum,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				user_password = #{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="userNp != null">
				user_np = #{userNp,jdbcType=INTEGER},
			</if>
			<if test="userReport != null">
				user_report = #{userReport,jdbcType=VARCHAR},
			</if>
			<if test="userDuty != null">
				user_duty = #{userDuty,jdbcType=VARCHAR},
			</if>
			<if test="userDesc != null">
				user_desc = #{userDesc,jdbcType=VARCHAR},
			</if>
			<if test="userDep != null">
				user_dep = #{userDep,jdbcType=INTEGER},
			</if>
			<if test="userRole != null">
				user_role = #{userRole,jdbcType=INTEGER},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.future.domain.User">
		update od_user
		set user_name = #{userName,jdbcType=VARCHAR},
		user_num = #{userNum,jdbcType=VARCHAR},
		user_password = #{userPassword,jdbcType=VARCHAR},
		user_np = #{userNp,jdbcType=INTEGER},
		user_report = #{userReport,jdbcType=VARCHAR},
		user_duty = #{userDuty,jdbcType=VARCHAR},
		user_desc = #{userDesc,jdbcType=VARCHAR},
		user_dep = #{userDep,jdbcType=INTEGER},
		user_role = #{userRole,jdbcType=INTEGER}
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	
	
	
	<!--  -->
	<resultMap id="userAndRoleAndDeprtment" type="com.future.domain.User" extends="BaseResultMap">
	
		<association property="role" javaType="com.future.domain.Role">
			<id column="role_id" property="roleId"/>
			<result column="role_name" property="roleName"/>
			<result column="role_desc" property="roleDesc"/>
		</association>
	</resultMap>
	
	<select id="getAllUser" resultType="com.future.domain.User" resultMap="userAndRoleAndDeprtment">
		select 
		user.*,role.role_id,role.role_name,role.role_desc
		from od_user user,od_role role
		where user.user_role = role.role_id
	</select>
</mapper>